var inputField=document.querySelector(".input-box__input"),inputResult=document.querySelector(".input-box__result"),inputBtn=document.querySelector(".input-box__button"),checksumRadio=document.querySelector(".mode-box__input--checksum"),validationRadio=document.querySelector(".mode-box__input--validation"),card=document.querySelector(".card-box__card"),cardNumber=document.querySelector(".card-box__card--number"),cardLogo=document.querySelector(".card-box__card--logo"),radioButtons=document.querySelectorAll(".mode-box__input"),calculateChecksum=function(e){for(var t=e.toString().split("").map(Number),n=t.length-1;0<=n&&(t[n]*=2,9<t[n]&&(t[n]=t[n].toString().split("").map(Number).reduce(function(e,t){return e+t},0)),1!=n);n-=2);e=t.reduce(function(e,t){return e+t}).toString().split("").map(Number),e=e[e.length-1];return 0==e?0:10-e},inputButtonHandler=function(){var e=inputField.value;""!=e?(inputField.classList.remove("input-box__input--error"),inputResult.classList.remove("input-box__result--error"),inputResult.textContent="Checksum: ".concat(calculateChecksum(e))):(inputField.classList.add("input-box__input--error"),inputResult.textContent="Please enter a number",inputResult.classList.add("input-box__result--error"))},inputFieldProtectionHandler=function(e){var t="0"<=e.key&&e.key<="9",n=["Backspace","Delete","ArrowLeft","ArrowRight"].includes(e.key);t||n||e.preventDefault(),validationRadio.checked&&16<=inputField.value.length&&t&&e.preventDefault()},inputFieldToCardHandler=function(){inputField.value.length<2&&checkCardLogo(inputField.value),inputField.value=inputField.value.replace(/\D/g,""),cardNumber.textContent=inputField.value,validationRadio.checked&&16<inputField.value.length&&(inputField.value=inputField.value.slice(0,16),cardNumber.textContent=inputField.value),1<=inputField.value.length&&!document.querySelector(".card-box__card--logo-img")&&cardLogo.appendChild(getLogo(Number(inputField.value[0])))},createImg=function(e){var t;if(null!=e)return(t=document.createElement("img")).src="./dist/img/".concat(e,".webp"),t.classList.add("card-box__card--logo-img"),t},getLogo=function(e){switch(console.log(e),e){case 2:case 5:return createImg("mastercard");case 3:return createImg("aexpress");case 4:return createImg("visa");default:return null}},checkCardLogo=function(e){4==e[0]?console.log("visa"):5!=e[0]&&2!=e[0]||console.log("mastercard")},radioButtonsHandler=function(){validationRadio.checked?(inputField.value="",cardNumber.textContent="",card.classList.add("visible"),card.classList.remove("hidden")):(inputField.value="",cardNumber.textContent="",card.classList.remove("visible"),card.classList.add("hidden"))};radioButtons.forEach(function(e){e.addEventListener("change",radioButtonsHandler)}),inputBtn.addEventListener("click",inputButtonHandler),inputField.addEventListener("keydown",inputFieldProtectionHandler),inputField.addEventListener("input",inputFieldToCardHandler);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
